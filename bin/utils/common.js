"use strict";const e=require("webpack"),t=require("path"),r=require("fs"),n=require("confman"),i=process.cwd(),{printLog:s,getUtilName:l}=require("./base"),o=()=>{const e=l(),t=n.load(`${i}/${e}`);if(Object.keys(t).length>0)return t;s({type:"error",text:`没有加载到配置文件${e}.*`})};module.exports={webpackCommand:(()=>{const e=t.resolve(__dirname,"..","..","node_modules",".bin","webpack");return r.existsSync(e)?e:"webpack"})(),config:o(),entry:(()=>{const e=o();if("object"!=typeof e.entry)return s({type:"error",text:'entry必须object类型\n 例如："entry": {"main":"./src/pages/index.js"}\r\n'});if(Object.keys(e.entry).length>0)return e.entry;{const n=t.join(i,e.base,e.pages);try{if(!r.existsSync(n))return s({type:"error",text:"请设置项目配置文件入口entry字段"}),{}}catch(e){return s({type:"error",text:"请设置项目配置文件入口entry字段"}),{}}const l=r.readdirSync(n);let o={};for(let i=0;i<l.length;i++){const s=t.join(n,l[i]);r.statSync(s).isDirectory()&&(o[l[i]]=`./${e.base}/${e.pages}/${l[i]}/index.js`)}return o}})(),dllReferencePlugin:n=>Object.keys(n.library).map((l=>{const o=((e,t)=>{try{if(!r.existsSync(e))return!1}catch(e){return!1}const n=r.readdirSync(e);for(let e=0;e<n.length;e++)if(new RegExp(t).test(n[e]))return n[e];return!1})(t.join(i,n.build,n.dll),`${l}[^.]*\\.manifest\\.json`);return o?new e.DllReferencePlugin({context:t.join(i),manifest:require(t.join(i,n.build,n.dll,o))}):(s({type:"error",text:`没有找到${l}对应的dll manifest.json 文件`}),null)})),loadDllAssets:e=>r.readdirSync(t.join(i,e.build,e.dll)).filter((e=>e.match(/.js$/))).map((r=>({filepath:t.join(i,e.build,e.dll,r),outputPath:"dll",publicPath:`${e.static[process.env.NODE_ENV]}/dll`}))),genAlias:(e,n)=>{const s=r.readdirSync(e),l=n.alias;let o={};return s.forEach((r=>{o[r]=t.resolve(e,r)})),l&&"object"==typeof l&&Object.keys(l).forEach((e=>{o[e]=t.join(i,l[e])})),{...o}},getTemplate:()=>{const e=t.join(i,"template.html");let n="";return r.existsSync(e)?n=r.readFileSync(e,"utf8"):(s({text:"没有在您的项目中加载到模版文件，将使用默认模版"}),n=r.readFileSync(t.join(__dirname,"..","config","template.html"),"utf8")),n}};
