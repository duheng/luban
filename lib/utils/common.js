"use strict";const e=require("webpack"),t=require("path"),r=require("fs"),n=process.cwd(),{printLog:i,getUtilName:s}=require("./base"),l=()=>{const e=s(),t=require(`${n}/${e}.js`);if(Object.keys(t).length>0)return t;i({type:"error",text:`没有加载到配置文件${e}.*`})};module.exports={webpackCommand:(()=>{const e=t.resolve(__dirname,"..","..","node_modules",".bin","webpack");return r.existsSync(e)?e:"webpack"})(),config:l(),entry:(()=>{const e=l();if("object"!=typeof e.entry)return i({type:"error",text:'entry必须object类型\n 例如："entry": {"main":"./src/pages/index.js"}\r\n'});if(Object.keys(e.entry).length>0)return e.entry;{const s=t.join(n,e.base,e.pages);try{if(!r.existsSync(s))return i({type:"error",text:"请设置项目配置文件入口entry字段"}),{}}catch(e){return i({type:"error",text:"请设置项目配置文件入口entry字段"}),{}}const l=r.readdirSync(s);let c={};for(let n=0;n<l.length;n++){const i=t.join(s,l[n]);r.statSync(i).isDirectory()&&(c[l[n]]=`./${e.base}/${e.pages}/${l[n]}/index.js`)}return c}})(),dllReferencePlugin:s=>Object.keys(s.library).map((l=>{const c=((e,t)=>{try{if(!r.existsSync(e))return!1}catch(e){return!1}const n=r.readdirSync(e);for(let e=0;e<n.length;e++)if(new RegExp(t).test(n[e]))return n[e];return!1})(t.join(n,s.build,s.dll),`${l}[^.]*\\.manifest\\.json`);return c?new e.DllReferencePlugin({context:t.join(n),manifest:require(t.join(n,s.build,s.dll,c))}):(i({type:"error",text:`没有找到${l}对应的dll manifest.json 文件`}),null)})),loadDllAssets:e=>r.readdirSync(t.join(n,e.build,e.dll)).filter((e=>e.match(/.js$/))).map((r=>({filepath:t.join(n,e.build,e.dll,r),outputPath:"dll",publicPath:`${e.static[process.env.NODE_ENV]}/dll`}))),genAlias:(e,i)=>{const s=r.readdirSync(e),l=i.alias;let c={};return s.forEach((r=>{c[r]=t.resolve(e,r)})),l&&"object"==typeof l&&Object.keys(l).forEach((e=>{c[e]=t.join(n,l[e])})),{...c}},getTemplate:()=>{const e=t.join(n,"template.html");let s="";return r.existsSync(e)?s=r.readFileSync(e,"utf8"):(i({text:"没有在您的项目中加载到模版文件，将使用默认模版"}),s=r.readFileSync(t.join(__dirname,"..","config","template.html"),"utf8")),s}};
